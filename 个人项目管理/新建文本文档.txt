
# 📋 **个人效率工具集 - 技术需求文档**

## 1. 项目概述 (Overview)
开发一个集成5个功能模块的个人效率管理web应用，包括记事本、待办清单、AI对话、番茄钟和项目管理功能。应用采用纯前端技术，数据保存在浏览器本地存储中，无需注册登录，打开即用。

## 2. 核心功能点 (Core Features)
- ✅ **记事本模块：** 支持文件夹分类的文本笔记管理
- ✅ **待办清单模块：** 带优先级和截止日期的任务管理
- ✅ **AI对话模块：** 免费AI服务集成，保存聊天历史
- ✅ **番茄钟模块：** 25分钟工作+5分钟休息的时间管理
- ✅ **项目管理模块：** 简单的项目任务列表管理
- ✅ **统一导航：** 侧边栏导航切换模块

## 3. 技术规格 (Technical Specifications)

### 前端 (Frontend)

#### 页面/组件 (Pages/Components)
```
主页面结构：
├── 侧边栏导航 (Sidebar)
│   ├── 记事本
│   ├── 待办清单
│   ├── AI对话
│   ├── 番茄钟
│   └── 项目管理
└── 主内容区 (Main Content)
    ├── 记事本页面
    ├── 待办清单页面
    ├── AI对话页面
    ├── 番茄钟页面
    └── 项目管理页面
```

#### 用户流程 (User Flow)
1. **打开应用** → 默认显示记事本模块
2. **点击侧边栏** → 切换到对应模块页面
3. **数据操作** → 实时保存到浏览器localStorage (本地存储)
4. **关闭重开** → 自动加载之前保存的数据

#### 数据交互 (Data Interaction)
- **数据存储：** 使用浏览器 localStorage API 保存所有数据
- **数据格式：** JSON格式存储，包含5个模块的独立数据对象
- **AI接口：** 调用免费AI API（推荐使用 Hugging Face 免费API）

### 后端 (Backend)
**无需后端服务器** - 采用纯前端方案，所有数据保存在用户浏览器本地

### 数据模型 (Data Models)

```javascript
// localStorage 数据结构设计
{
  "notes": {
    "folders": [
      {
        "id": "folder_1",
        "name": "工作笔记",
        "notes": [
          {
            "id": "note_1", 
            "title": "会议记录",
            "content": "今天的会议内容...",
            "createdAt": "2024-01-01T10:00:00Z"
          }
        ]
      }
    ]
  },

  "todos": [
    {
      "id": "todo_1",
      "title": "完成项目报告", 
      "priority": "high", // high, medium, low
      "dueDate": "2024-01-15",
      "completed": false,
      "createdAt": "2024-01-01T10:00:00Z"
    }
  ],

  "aiChats": [
    {
      "id": "chat_1",
      "messages": [
        {
          "role": "user", // user 或 assistant
          "content": "你好",
          "timestamp": "2024-01-01T10:00:00Z"
        }
      ]
    }
  ],

  "pomodoro": {
    "workTime": 25, // 工作时间（分钟）
    "breakTime": 5, // 休息时间（分钟）
    "todayCount": 3, // 今日完成数量
    "lastDate": "2024-01-01"
  },

  "projects": [
    {
      "id": "project_1",
      "name": "个人网站开发",
      "tasks": [
        {
          "id": "task_1",
          "title": "设计页面布局",
          "completed": false
        }
      ]
    }
  ]
}
```

## 4. 技术栈建议 (Tech Stack Suggestion)

**推荐给初学者的技术栈：**
- **HTML5** - 页面结构
- **CSS3** - 样式设计（推荐使用简单的CSS框架如 Bootstrap 或 自写简单样式）
- **原生JavaScript (ES6+)** - 功能逻辑实现
- **localStorage API** - 数据持久化
- **Fetch API** - AI接口调用
- **免费AI服务** - Hugging Face Inference API (免费额度)

**为什么选择这个技术栈：**
- ✅ 无需复杂的框架，适合初学者
- ✅ 无需服务器，降低部署复杂度
- ✅ 数据本地存储，保护隐私
- ✅ 所有技术都是Web标准，学习价值高

## 5. 开发步骤建议 (Development Steps)

### 阶段一：基础框架搭建 (1-2天)
1. **创建项目文件结构**
   ```
   personal-tools/
   ├── index.html
   ├── css/
   │   └── style.css
   ├── js/
   │   ├── app.js (主应用逻辑)
   │   ├── storage.js (数据存储管理)
   │   └── modules/ (各模块的JavaScript文件)
   └── assets/ (图标、音效等资源)
   ```

2. **搭建HTML基础结构** - 侧边栏 + 主内容区
3. **实现CSS基础样式** - 简洁的侧边栏导航和响应式布局
4. **实现页面切换功能** - JavaScript控制显示/隐藏不同模块

### 阶段二：核心功能开发 (按优先级逐一实现)

#### 第1周：记事本模块
- [ ] 文件夹创建/删除功能
- [ ] 笔记创建/编辑/删除功能
- [ ] localStorage数据保存
- [ ] 基础的搜索功能

#### 第2周：待办清单模块
- [ ] 任务添加/删除功能
- [ ] 优先级设置（高中低，用颜色区分）
- [ ] 截止日期设置
- [ ] 完成状态切换
- [ ] 任务过滤显示（全部/未完成/已完成）

#### 第3周：番茄钟模块
- [ ] 倒计时器实现
- [ ] 工作/休息模式切换
- [ ] 浏览器通知提醒
- [ ] 今日完成数量统计

#### 第4周：项目管理模块
- [ ] 项目创建/删除
- [ ] 项目内任务管理
- [ ] 简单的进度显示

#### 第5周：AI对话模块
- [ ] 集成免费AI API
- [ ] 聊天界面实现
- [ ] 聊天记录保存
- [ ] 错误处理（API调用失败等）

### 阶段三：优化完善 (1周)
- [ ] 界面美化和用户体验优化
- [ ] 数据导入/导出功能
- [ ] 浏览器兼容性测试
- [ ] 性能优化

## 6. 学习资源推荐

**对于编程初学者，建议按以下顺序学习：**
1. **HTML基础** (1-2天) - MDN Web文档
2. **CSS基础** (3-5天) - 重点学习Flexbox布局
3. **JavaScript基础** (1-2周) - 变量、函数、DOM操作
4. **localStorage使用** (1天) - 数据持久化
5. **Fetch API** (2-3天) - 网络请求

**推荐学习网站：**
- MDN Web Docs (mozilla.org)
- JavaScript.info
- FreeCodeCamp

